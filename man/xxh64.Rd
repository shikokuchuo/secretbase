% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/base.R
\name{xxh64}
\alias{xxh64}
\alias{xxh64file}
\title{Fast Non-Cryptographic Hashing Using xxHash64}
\usage{
xxh64(x, convert = TRUE)

xxh64file(file, convert = TRUE)
}
\arguments{
\item{x}{R object to hash. A character string or raw vector (without
attributes) is hashed 'as is'. All other objects are hashed using R
serialization in a memory-efficient 'streaming' manner, without
allocation of the serialized object. To ensure portability, serialization
v3 XDR is always used with headers skipped (as these contain R version
and encoding information).}

\item{convert}{[default TRUE] if TRUE, the hash is converted to its hex
representation as a character string, if FALSE, output directly as a raw
vector, or if NA, a vector of (32-bit) integer values.}

\item{file}{character file name / path. The file is hashed in a streaming
fashion and may be larger than memory.}
}
\value{
A character string, raw or integer vector depending on 'convert'.
}
\description{
Returns the 'xxHash64' of the supplied R object or file. This is an extremely
    fast hash, processing at RAM speed limits.
}
\details{
This implementation uses the algorithm released by Yann Collet at
    \url{https://xxhash.com/}.
}
\examples{
# xxHash64 as character string:
xxh64("secret base")

# xxHash64 as raw vector:
xxh64("secret base", convert = FALSE)

# xxHash64 a file:
file <- tempfile(); cat("secret base", file = file)
xxh64file(file)
unlink(file)

}
